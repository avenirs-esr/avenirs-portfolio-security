name: Setup PostgreSQL

on:
  workflow_call:
    inputs:
      postgres_user:
        required: true
        type: string
      postgres_password:
        required: true
        type: string
      postgres_db:
        required: true
        type: string

jobs:
  setup-postgres:
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: ${{ inputs.postgres_user }}
      POSTGRES_PASSWORD: ${{ inputs.postgres_password }}
      POSTGRES_DB: ${{ inputs.postgres_db }}
      PGPASSWORD: ${{ inputs.postgres_password }}
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ inputs.postgres_user }}
          POSTGRES_PASSWORD: ${{ inputs.postgres_password }}
          POSTGRES_DB: ${{ inputs.postgres_db }}
        ports:
          - 65432:5432
        options: >-
          --health-cmd "pg_isready"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Wait for PostgreSQL to be ready
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          for i in {1..4}; do
            if psql -h localhost -p 65432 -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c "\q"; then
              echo "PostgreSQL is ready."
              break
            fi
            echo "PostgreSQL is not ready yet... retrying in 5 seconds."
            sleep 5
          done

      - name: Inject SQL File into Database
        run: |
          echo "Injecting init-test-db.sql into PostgreSQL..."
          psql -h localhost -p 65432 -U ${POSTGRES_USER} -d ${POSTGRES_DB} -f src/test/resources/db/init-test-db.sql

      - name: Verify PostgreSQL Setup
        run: |
          echo "Testing PostgreSQL connection on port 65432..."
          psql -h localhost -p 65432 -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c "\l"
