databaseChangeLog:
  - changeSet:
      id: "principal"
      author: Deman
      changes:
        - createTable:
            tableName: principal
            columns:
              - column:
                  name: id
                  type: UUID
                  defaultValueComputed: "gen_random_uuid()"
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: login
                  type: VARCHAR(50)
                  constraints:
                    nullable: false
        - createIndex:
            tableName: principal
            column:
              name: login
        - sql:
            dbms: 'postgresql'
            endDelimiter: \nGO
            splitStatements: true
            sql: ALTER TABLE principal OWNER TO ${avenirs.admin.role}
            stripComments: true

  - changeSet:
      id: "2"
      author: Deman
      changes:
        - createTable:
            tableName: role
            columns:
              - column:
                  name: id
                  type: UUID
                  defaultValueComputed: "gen_random_uuid()"
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  type: VARCHAR(80)
                  constraints:
                    nullable: false
                    unique: true
              - column:
                  name: description
                  type: VARCHAR(255)
                  constraints:
                    nullable: false
        - sql:
            dbms: 'postgresql'
            endDelimiter: \nGO
            splitStatements: true
            sql: ALTER TABLE role OWNER TO ${avenirs.admin.role}
            stripComments: true

  - changeSet:
      id: "3"
      author: Deman
      changes:
        - createTable:
            tableName: permission
            columns:
              - column:
                  name: id
                  type: UUID
                  defaultValueComputed: "gen_random_uuid()"
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  type: VARCHAR(80)
                  constraints:
                    nullable: false
                    unique: true
              - column:
                  name: description
                  type: VARCHAR(255)
                  constraints:
                    nullable: false
        - sql:
            dbms: 'postgresql'
            endDelimiter: \nGO
            splitStatements: true
            sql: ALTER TABLE permission OWNER TO ${avenirs.admin.role}
            stripComments: true

  - changeSet:
      id: "4"
      author: Deman
      changes:
        - createTable:
            tableName: action
            columns:
              - column:
                  name: id
                  type: UUID
                  defaultValueComputed: "gen_random_uuid()"
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  type: VARCHAR(80)
                  constraints:
                    nullable: false
                    unique: true
              - column:
                  name: description
                  type: VARCHAR(255)
                  constraints:
                    nullable: false
        - sql:
            dbms: 'postgresql'
            endDelimiter: \nGO
            splitStatements: true
            sql: ALTER TABLE action OWNER TO ${avenirs.admin.role}
            stripComments: true

  - changeSet:
      id: "5"
      author: Deman
      changes:
        - createTable:
            tableName: action_route
            columns:
              - column:
                  name: id
                  type: UUID
                  defaultValueComputed: "gen_random_uuid()"
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: id_action
                  type: UUID
                  constraints:
                    nullable: false
              - column:
                  name: uri
                  type: VARCHAR(255)
                  constraints:
                    nullable: false
              - column:
                  name: method
                  type: CITEXT
                  constraints:
                    nullable: false
              - column:
                  name: description
                  type: VARCHAR(255)
        - addUniqueConstraint:
            tableName: action_route
            columnNames: uri, method
            constraintName: action_route_uri_method_unique_cstr
        - addForeignKeyConstraint:
            baseTableName: action_route
            baseColumnNames: id_action
            constraintName: action_route_id_action_fk
            referencedTableName: action
            referencedColumnNames: id
            onDelete: CASCADE
        - sql:
            dbms: 'postgresql'
            endDelimiter: \nGO
            splitStatements: true
            sql: ALTER TABLE action_route OWNER TO ${avenirs.admin.role}
            stripComments: true

  - changeSet:
      id: "6"
      author: Deman
      changes:
        - createTable:
            tableName: resource_type
            columns:
              - column:
                  name: id
                  type: UUID
                  defaultValueComputed: "gen_random_uuid()"
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  type: VARCHAR(80)
                  constraints:
                    nullable: false
                    unique: true
              - column:
                  name: description
                  type: VARCHAR(255)
                  constraints:
                    nullable: false
        - sql:
            dbms: 'postgresql'
            endDelimiter: \nGO
            splitStatements: true
            sql: ALTER TABLE resource_type OWNER TO ${avenirs.admin.role}
            stripComments: true

  - changeSet:
      id: "7"
      author: Deman
      changes:
        - createTable:
            tableName: resource
            columns:
              - column:
                  name: id
                  type: UUID
                  defaultValueComputed: "gen_random_uuid()"
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: selector
                  type: VARCHAR(255)
                  constraints:
                    nullable: false
              - column:
                  name: id_resource_type
                  type: UUID
                  constraints:
                    nullable: false
        - addForeignKeyConstraint:
            baseTableName: resource
            baseColumnNames: id_resource_type
            constraintName: resource_id_resource_type_fk
            referencedTableName: resource_type
            referencedColumnNames: id
            onDelete: CASCADE
        - sql:
            dbms: 'postgresql'
            endDelimiter: \nGO
            splitStatements: true
            sql: ALTER TABLE resource OWNER TO ${avenirs.admin.role}
            stripComments: true

  - changeSet:
      id: "8"
      author: Deman
      changes:
        - createTable:
            tableName: scope
            columns:
              - column:
                  name: id
                  type: UUID
                  defaultValueComputed: "gen_random_uuid()"
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  type: VARCHAR(80)
                  constraints:
                    nullable: true
        - sql:
            dbms: 'postgresql'
            endDelimiter: \nGO
            splitStatements: true
            sql: ALTER TABLE scope OWNER TO ${avenirs.admin.role}
            stripComments: true

  - changeSet:
      id: "9"
      author: Deman
      changes:
        - createTable:
            tableName: scope_resource
            columns:
              - column:
                  name: id_scope
                  type: UUID
                  constraints:
                    nullable: false
              - column:
                  name: id_resource
                  type: UUID
                  constraints:
                    nullable: false
        - addPrimaryKey:
            tableName: scope_resource
            columnNames: id_scope, id_resource
            constraintName: scope_resource_pk
        - addForeignKeyConstraint:
            baseTableName: scope_resource
            baseColumnNames: id_scope
            constraintName: scope_resource_id_scope_fk
            referencedTableName: scope
            referencedColumnNames: id
            onDelete: CASCADE
        - addForeignKeyConstraint:
            baseTableName: scope_resource
            baseColumnNames: id_resource
            constraintName: scope_resource_id_resource_fk
            referencedTableName: resource
            referencedColumnNames: id
            onDelete: CASCADE
        - sql:
            dbms: 'postgresql'
            endDelimiter: \nGO
            splitStatements: true
            sql: ALTER TABLE scope_resource OWNER TO ${avenirs.admin.role}
            stripComments: true

  - changeSet:
      id: "10"
      author: Deman
      changes:
        - createTable:
            tableName: context
            columns:
              - column:
                  name: id
                  type: UUID
                  defaultValueComputed: "gen_random_uuid()"
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: validity_start
                  type: datetime
              - column:
                  name: validity_end
                  type: datetime
        - createIndex:
            tableName: context
            column:
              name: validity_start
        - createIndex:
            tableName: context
            column:
              name: validity_end
        - sql:
            dbms: 'postgresql'
            endDelimiter: \nGO
            splitStatements: true
            sql: ALTER TABLE context OWNER TO ${avenirs.admin.role}
            stripComments: true

  - changeSet:
      id: "11"
      author: Deman
      changes:
        - createTable:
            tableName: action_permission
            columns:
              - column:
                  name: id_action
                  type: UUID
                  constraints:
                    nullable: false
              - column:
                  name: id_permission
                  type: UUID
                  constraints:
                    nullable: false
        - addPrimaryKey:
            tableName: action_permission
            columnNames: id_action, id_permission
            constraintName: action_permission_pk
        - addForeignKeyConstraint:
            baseTableName: action_permission
            baseColumnNames: id_action
            constraintName: action_permission_id_action_fk
            referencedTableName: action
            referencedColumnNames: id
            onDelete: CASCADE
        - addForeignKeyConstraint:
            baseTableName: action_permission
            baseColumnNames: id_permission
            constraintName: action_permission_id_permission_fk
            referencedTableName: permission
            referencedColumnNames: id
            onDelete: CASCADE
        - sql:
            dbms: 'postgresql'
            endDelimiter: \nGO
            splitStatements: true
            sql: ALTER TABLE action_permission OWNER TO ${avenirs.admin.role}
            stripComments: true

  - changeSet:
      id: "12"
      author: Deman
      changes:
        - createTable:
            tableName: role_permission
            columns:
              - column:
                  name: id_role
                  type: UUID
                  constraints:
                    nullable: false
              - column:
                  name: id_permission
                  type: UUID
                  constraints:
                    nullable: false
        - addPrimaryKey:
            tableName: role_permission
            columnNames: id_role, id_permission
            constraintName: role_permission_pk
        - addForeignKeyConstraint:
            baseTableName: role_permission
            baseColumnNames: id_role
            constraintName: role_permission_id_role_fk
            referencedTableName: role
            referencedColumnNames: id
            onDelete: CASCADE
        - addForeignKeyConstraint:
            baseTableName: role_permission
            baseColumnNames: id_permission
            constraintName: role_permission_id_permission_fk
            referencedTableName: permission
            referencedColumnNames: id
            onDelete: CASCADE
        - sql:
            dbms: 'postgresql'
            endDelimiter: \nGO
            splitStatements: true
            sql: ALTER TABLE role_permission OWNER TO ${avenirs.admin.role}
            stripComments: true

  - changeSet:
      id: "13"
      author: Deman
      changes:
        - createTable:
            tableName: assignment
            columns:
              - column:
                  name: id
                  type: UUID
                  constraints:
                    nullable: false
                    primaryKey: true
              - column:
                  name: id_role
                  type: UUID
                  constraints:
                    nullable: false
              - column:
                  name: id_principal
                  type: UUID
                  constraints:
                    nullable: false
              - column:
                  name: id_scope
                  type: UUID
                  constraints:
                    nullable: false
                    unique: false
              - column:
                  name: id_context
                  type: UUID
                  constraints:
                    nullable: false
                    unique: false
        - addForeignKeyConstraint:
            baseTableName: assignment
            baseColumnNames: id_role
            constraintName: assignment_id_role_fk
            referencedTableName: role
            referencedColumnNames: id
            onDelete: CASCADE
        - addForeignKeyConstraint:
            baseTableName: assignment
            baseColumnNames: id_principal
            constraintName: assignment_id_principal_fk
            referencedTableName: principal
            referencedColumnNames: id
            onDelete: CASCADE
        - addForeignKeyConstraint:
            baseTableName: assignment
            baseColumnNames: id_scope
            constraintName: assignment_id_scope_fk
            referencedTableName: scope
            referencedColumnNames: id
            onDelete: CASCADE
        - addForeignKeyConstraint:
            baseTableName: assignment
            baseColumnNames: id_context
            constraintName: assignment_id_context_fk
            referencedTableName: context
            referencedColumnNames: id
            onDelete: CASCADE
        - addUniqueConstraint:
            tableName: assignment
            columnNames: id_role, id_principal, id_scope, id_context
            constraintName: unique_assignment_constraint
        - sql:
            dbms: 'postgresql'
            endDelimiter: \nGO
            splitStatements: true
            sql: ALTER TABLE assignment OWNER TO ${avenirs.admin.role}
            stripComments: true
