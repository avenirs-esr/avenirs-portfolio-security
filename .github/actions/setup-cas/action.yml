name: "Setup CAS"
description: "Builds and starts the CAS environment"

runs:
  using: "composite"
  steps:
    - name: Cache Docker Images for CAS
      uses: actions/cache@v4
      with:
        path: /tmp/.docker-cache-cas
        key: ${{ runner.os }}-docker-cas-${{ hashFiles('cas-overlay-template/Dockerfile') }}
        restore-keys: |
          ${{ runner.os }}-docker-cas-

    - name: Check if CAS Docker Image Exists
      id: check-image
      run: |
        export DOCKER_CONFIG=/tmp/.docker-cache-cas
        if docker --config $DOCKER_CONFIG image inspect avenirs-cas-custom:6.6.15.2 > /dev/null 2>&1; then
          echo "Docker inspect: Valid image found"
          echo "exists=true" >> $GITHUB_ENV
        else
          echo "Docker inspect: Valid image not found"
          echo "exists=false" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Build Docker image if not cached
      if: ${{ env.exists == 'false' }}
      run: |
        export DOCKER_CONFIG=/tmp/.docker-cache-cas
        git clone https://github.com/apereo/cas-overlay-template.git
        cd cas-overlay-template
        git checkout remotes/origin/6.6
        cp ../.github/cas/build.gradle build.gradle
        cp ../.github/cas/Dockerfile Dockerfile
        cp -r ../.github/cas/etc/* etc/
        docker --config $DOCKER_CONFIG build -t avenirs-cas-custom:6.6.15.2 .
      shell: bash

    - name: Save Docker image to Cache
      if: ${{ env.exists == 'false' }}
      run: |
        export DOCKER_CONFIG=/tmp/.docker-cache-cas
        docker --config $DOCKER_CONFIG save avenirs-cas-custom:6.6.15.2 -o /tmp/.docker-cache-cas/avenirs-cas-custom.tar
      shell: bash

    - name: Start CAS Container
      run: |
        export DOCKER_CONFIG=/tmp/.docker-cache-cas
        docker --config $DOCKER_CONFIG run -d --name avenirs-cas \
        --network avenirs-network \
        -p 443:8443 -p 8080:8080 \
        avenirs-cas-custom:6.6.15.2
      shell: bash

    - name: Wait for CAS to be ready
      run: |
        echo "Waiting for CAS to be ready..."
        sleep 20
        set +e
        for i in {1..10}; do
          STATUS=$(curl -k -s -o /dev/null -w "%{http_code}" https://localhost/cas/login)
          if [ "$STATUS" -eq 200 ]; then
            echo "CAS is ready."
            break
          fi
          echo "CAS is not ready yet... retrying in 10 seconds. Current status: $STATUS"
          sleep 10
        done
      shell: bash

    - name: (DEBUG) Display CAS Startup Logs
      if: ${{ false }}
      run: docker logs avenirs-cas
      shell: bash
      
    - name: (DEBUG) Display /etc/cas content
      if: ${{ false }}
      run: docker exec avenirs-cas ls -lR /etc/cas
      shell: bash
        
    - name: (DEBUG) Display CAS OIDC config
      if: ${{ false }}
      run: curl -k https://localhost/cas/oidc/.well-known/openid-configuration
      shell: bash
      
    - name: (DEBUG) Test CAS Accessibility Inside Container
      if: ${{ false }}
      run: docker exec avenirs-cas curl -v -k https://localhost:8443/cas/login
      shell: bash
    
    - name: (DEBUG) Test CAS Accessibility Outside Container
      if: ${{ false }}
      run: curl -v -k https://localhost:443/cas/login
      shell: bash
