# Properties may be overriden in this optional properties file.
spring.config.import=optional:classpath:env.properties
spring.application.name=avenirs-portfolio-security
server.address=0.0.0.0
server.port=12000

# Persistence
spring.datasource.url=jdbc:postgresql://localhost:65432/avenirs_access_control
spring.datasource.username=pguser
spring.datasource.password=pgpassword
spring.jpa.show-sql=true
# spring.jpa.hibernate.ddl-auto=none
# spring.jpa.defer-datasource-initialization=true
# spring.sql.init.mode=always

# Liquidbase
spring.liquibase.change-log=classpath:db/changelog/db.changelog-root.yaml
spring.liquibase.enabled=true
spring.liquibase.default-schema=dev

# Logging
logging.level.root=ERROR
logging.level.fr.avenirsesr=TRACE
logging.level.org.apache.http.wire=DEBUG

# ---- Avenirs specific settings ----
avenirs.apim.base.uri=apisix-gw
avenirs.accessControl=/access-control
avenirs.accessControl.roles=/roles
avenirs.authentication.oidc.callback=/oidc/callback
avenirs.authentication.oidc.callback.redirect=/oidc/redirect
avenirs.authentication.service.template=http://%HOST%/examples/retrieve-access-token.html
avenirs.authentication.oidc.callback.introspect=/oidc/introspect
avenirs.authentication.oidc.provider.introspect.url=https://avenirs-apache/cas/oidc/introspect
avenirs.authentication.oidc.provider.jwks.url=https://avenirs-apache/cas/oidc/jwks
avenirs.authentication.oidc.callback.profile=/oidc/profile
avenirs.authentication.oidc.provider.profile.url=https://avenirs-apache/cas/oidc/profile
avenirs.authentication.oidc.authorise.template.url=https://%HOST%/cas/oidc/oidcAuthorize?client_id=%CLIENT_ID%&client_secret=%CLIENT_SECRET%&redirect_uri=https://%HOST%/${avenirs.apim.base.uri}${avenirs.authentication.oidc.callback.redirect}?code=%CODE%&scope=openid profile email&response_type=token
avenirs.authentication.oidc.token.template.url=https://avenirs-apache/cas/oidc/accessToken?grant_type=password&username=%LOGIN%&password=%PASSWORD%&client_id=%CLIENT_ID%&client_secret=%CLIENT_SECRET%&scope=openid profile email
avenirs.authentication.oidc.clientId=OIDCClientId
avenirs.authentication.oidc.clientSecret=audOlFfkDxpZfzhn2j04VsMg0Kd6CMAr
jasypt.encryptor.algorithm=PBEWithMD5AndDES
jasypt.encryptor.password=${JASYPT_ENCRYPTOR_PASSWORD}
logging.level.com.github.ulisesbocchio.jasypt=DEBUG



# Mapping for jwt algorithm and Pam keygenerator algorithm
# 09/2024: only the RSA algo are actually suported in the JWT Service.
avenirs.jwt.alg.mapping.RS256=RSA
avenirs.jwt.alg.mapping.RS384=RSA
avenirs.jwt.alg.mapping.RS512=RSA
avenirs.jwt.alg.mapping.PS256=RSA
avenirs.jwt.alg.mapping.PS384=RSA
avenirs.jwt.alg.mapping.PS512=RSA
avenirs.jwt.alg.mapping.ES256=EC
avenirs.jwt.alg.mapping.ES384=EC
avenirs.jwt.alg.mapping.ES512=EC
avenirs.jwt.alg.mapping.EdDSA=EdDSA
