name: Main Workflow

on:
  push:
    branches:
      - main

jobs:
  avenir-portfolio-security:
    runs-on: ubuntu-latest
    env: 
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      JASYPT_ENCRYPTOR_PASSWORD: ${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }}
      LDAP_ADMIN_PASSWORD: ${{ secrets.LDAP_ADMIN_PASSWORD }}
      LDAP_ADMIN: ${{ secrets.LDAP_ADMIN }}
      LDAP_BASE_DN: ${{ secrets.LDAP_BASE_DN }}
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      AVENIRS_APP_URL: http://localhost:12000
      AVENIRS_LOAD_TESTS_FIXTURES: src/test/resources/db/load-test-fixtures.sql
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Create Docker network
        run: docker network create avenirs-network
        
      - name: Setup PostgreSQL
        uses: ./.github/actions/setup-postgres
      
      - name: Setup OpenLDAP
        uses: ./.github/actions/setup-openldap
        with:
          ldap_base_dn: $LDAP_BASE_DN
          ldap_admin: LDAP_ADMIN
          ldap_admin_password: LDAP_ADMIN_PASSWORD

      - name: Setup CAS
        uses: ./.github/actions/setup-cas
        with:
          rebuild: false

      - name: (DEBUG) Check Docker containers
        if : false
        run: docker ps -a
        
  
      - name: Unit and coverage Tests
        uses: ./.github/actions/unit-and-coverage-tests
        if: true
        
      - name: (DEBUG) Display cas logs after tests
        if: false  
        run: |
          docker logs avenirs-cas

#      - name: Start Spring Boot Application
#        run: |
#          ./mvnw spring-boot:run & echo $! > spring-boot.pid
#        env:
#          SPRING_PROFILES_ACTIVE: dev
#
#      - name: Wait for Application to be Ready
#        run: |
#            echo "Waiting for Application to be ready..."
#            sleep 20
#            set +e
#            for i in {1..10}; do
#              STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:12000/actuator/health)
#              if [ "$STATUS" -eq 200 ]; then
#                echo "Application is ready."
#                break
#              fi
#              echo "Application is not ready yet... retrying in 10 seconds. Current status: $STATUS"
#              sleep 10
#            done
#
#            if [ "$STATUS" -ne 200 ]; then
#              echo "Application failed to start after 10 attempts."
#              exit 1
#            fi
      - name: Start application
        uses: ./.github/actions/spring-boot-app/start
        with:
          app_url: $AVENIRS_APP_URL
        if: true

      - name: Load Tests
        uses: ./.github/actions/load-tests
        with:
          fixtures: $AVENIRS_LOAD_TESTS_FIXTURES
          app_url: $AVENIRS_APP_URL
        if: true

      - name: Stop application
        uses: ./.github/actions/spring-boot-app/stop
        with:
          app_url: $AVENIRS_APP_URL
        if: true

      - name: Publish reports
        uses: ./.github/actions/publish-to-gh-pages
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/site
        if: true
