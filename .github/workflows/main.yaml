name: Debug and Setup PostgreSQL

on:
  push:
    branches:
      - main

jobs:
  debug-secrets:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check if POSTGRES_USER Secret is Set
        run: |
          if [ -z "${POSTGRES_USER}" ]; then
            echo "POSTGRES_USER is not set or empty."
          else
            echo "POSTGRES_USER is set and masked for security."
          fi
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}

  setup-postgres:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
         
        ports:
          - 65432:5432
        options: >-
          --health-cmd "pg_isready"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Wait for PostgreSQL to be ready
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          echo "POSTGRES_PASSWORD ${POSTGRES_PASSWORD}"
          for i in {1..4}; do
            if PGPASSWORD=${POSTGRES_PASSWORD} psql -h localhost -p 65432 -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c "\q"; then
              echo "PostgreSQL is ready."
              break
            fi
            echo "PostgreSQL is not ready yet... retrying in 5 seconds."
            sleep 5
          done
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

      - name: Inject SQL File into Database
        run: |
          echo "Injecting init-test-db.sql into PostgreSQL..."
          PGPASSWORD=${POSTGRES_PASSWORD} psql -h localhost -p 65432 -U ${POSTGRES_USER} -d ${POSTGRES_DB} -f src/test/resources/db/init-test-db.sql
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

      - name: Verify PostgreSQL Setup
        run: |
          echo "Testing PostgreSQL connection on port 65432..."
          PGPASSWORD=${POSTGRES_PASSWORD} psql -h localhost -p 65432 -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c "\l"
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
