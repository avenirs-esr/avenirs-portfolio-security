# Properties may be overriden in this optional properties file.
spring.config.import=optional:classpath:env.properties
spring.application.name=avenirs-portfolio-security
server.address=0.0.0.0
server.port=12000

# Persistence
spring.datasource.url=jdbc:postgresql://localhost:65432/avenirs_access_control
spring.datasource.username=pguser
spring.datasource.password=ENC(5gLztvdanWXs+sIXXPNIk8Yex3UrbCAL)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Liquidbase
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.yaml
spring.liquibase.enabled=true
spring.liquibase.default-schema=dev

# Jasypt
jasypt.encryptor.algorithm=PBEWithMD5AndDES
jasypt.encryptor.iv-generator-classname=org.jasypt.iv.NoIvGenerator
jasypt.encryptor.password=${JASYPT_ENCRYPTOR_PASSWORD}

# Logging
logging.level.root=ERROR
logging.level.fr.avenirsesr=ERROR
logging.level.org.apache.http.wire=ERROR
logging.level.liquibase=ERROR
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
logging.level.com.github.ulisesbocchio.jasypt=ERROR


# ---- Avenirs specific settings ----
avenirs.apim.base.uri=apisix-gw
avenirs.access.control=/access-control
avenirs.access.control.roles=/roles
avenirs.authentication.oidc.callback=/oidc/callback
avenirs.authentication.oidc.callback.redirect=/oidc/redirect
avenirs.authentication.service.template=http://%HOST%/examples/retrieve-access-token.html
avenirs.authentication.oidc.callback.introspect=/oidc/introspect
avenirs.authentication.oidc.provider.introspect.url=https://avenirs-apache/cas/oidc/introspect
avenirs.authentication.oidc.provider.jwks.url=https://avenirs-apache/cas/oidc/jwks
avenirs.authentication.oidc.callback.profile=/oidc/profile
avenirs.authentication.oidc.provider.profile.url=https://avenirs-apache/cas/oidc/profile
avenirs.authentication.oidc.authorise.template.url=https://%HOST%/cas/oidc/oidcAuthorize?client_id=%CLIENT_ID%&client_secret=%CLIENT_SECRET%&redirect_uri=https://%HOST%/${avenirs.apim.base.uri}${avenirs.authentication.oidc.callback.redirect}?code=%CODE%&scope=openid profile email&response_type=token
avenirs.authentication.oidc.token.template.url=https://avenirs-apache/cas/oidc/accessToken?grant_type=password&username=%LOGIN%&password=%PASSWORD%&client_id=%CLIENT_ID%&client_secret=%CLIENT_SECRET%&scope=openid profile email
avenirs.authentication.oidc.client.id=OIDCClientId
avenirs.authentication.oidc.client.secret=ENC(SnoMw8afiK5LwfAkF3AZ9XTcLyDByhqa)

# End points 
avenirs.access.control.share.read=/share/read
avenirs.access.control.share.write=/share/write
avenirs.access.control.display=/display
avenirs.access.control.edit=/edit
avenirs.access.control.feedback=/feedback
avenirs.access.control.delete=/delete


# Mapping for jwt algorithm and Pam keygenerator algorithm
# 09/2024: only the RSA algo are actually suported in the JWT Service.
avenirs.jwt.alg.mapping.rs256=RSA
avenirs.jwt.alg.mapping.rs384=RSA
avenirs.jwt.alg.mapping.rs512=RSA
avenirs.jwt.alg.mapping.ps256=RSA
avenirs.jwt.alg.mapping.ps384=RSA
avenirs.jwt.alg.mapping.ps512=RSA
avenirs.jwt.alg.mapping.es256=EC
avenirs.jwt.alg.mapping.es384=EC
avenirs.jwt.alg.mapping.es512=EC
avenirs.jwt.alg.mapping.eddsa=EdDSA
